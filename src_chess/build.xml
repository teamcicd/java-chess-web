<?xml version="1.0"?>
<project name="src_chess" basedir="." default="package">

    <property name="JDK1.6.dir" location="/usr/lib/jvm/java-1.6.0"/>
    <property name="javac1.6" location="${JDK1.6.dir}/bin/javac"/>
	
    <property name="src" value="src"/>
    <property name="test_src" value="test"/>
    <property name="output" value="dist"/>
    <property name="test_classpath" value="bin"/>
    <property name="test_output" value="test_reports"/>
    <property name="data.dir" value="/var/lib/jenkins/workspace/data"/>
	
    <property name="jar.dir" value="lib"/>
    <property name="jar.name" value="src_chess"/>
    <property name="war.name" value="games"/>
	
    <property name="login.name" value="teamcicd"/>
    <property name="prod1.host" value="172.16.13.89"/>
    <property name="prod2.host" value="172.16.12.88"/>
    <property name="test.host" value="172.16.13.102"/>
    <property name="deploy.dir" value="/usr/share/tomcat6/webapps"/>
    <property name="keyfile.name" value="/home/teamcicd/.ssh/id_rsa"/>
    <property name="gui.dir" value="/home/teamcicd/python-example"/>
    
    <path id="classpath">
        <fileset dir="${jar.dir}">
            <include name="*.jar"/>
        </fileset>
    </path>
	
    <target name="deploy_prod1" >
        <exec executable="sudo">
          <arg value="chmod"/>
          <arg value="777"/>
          <arg value="${output}/${war.name}.war"/>
        </exec>
        <scp file="${output}/${war.name}.war"
          todir="${login.name}@${prod1.host}:${deploy.dir}"
          keyfile="${keyfile.name}"
          trust="true"
          verbose="true"/>
    </target>
	
    <target name="deploy_prod2">
        <exec executable="sudo">
          <arg value="chmod"/>
          <arg value="777"/>
          <arg value="${output}/${war.name}.war"/>
        </exec>
        <scp file="${output}/${war.name}.war"
          todir="${login.name}@${prod2.host}:${deploy.dir}"
          keyfile="${keyfile.name}"
          trust="true"
          verbose="true"/>
    </target>   
    
    <target name="deploy_test">
       <exec executable="sudo">
          <arg value="chmod"/>
          <arg value="777"/>
          <arg value="${output}/${war.name}.war"/>
	  </exec>
      <scp file="${output}/${war.name}.war"
        todir="${login.name}@${test.host}:${deploy.dir}"
        keyfile="${keyfile.name}"
        trust="true"
        verbose="true"/>
    </target>
	
    <target name = "package" depends="package_jar">
        <copy file="../src_chess/dist/${jar.name}.jar" todir="../web_games/war/WEB-INF/lib"/>
        <ant dir="../web_games" target="package_war" inheritall="false" antfile="build.xml"/>
        <copy file="../web_games/dist/${war.name}.war" todir="dist"/>
    </target>
	
    <target name="package_jar">
        <jar destfile="${output}/${jar.name}.jar">
            <fileset dir="bin"/>
        </jar>
    </target>
    
    <target name="compile" depends="clean">
        <javac executable="${javac1.6}" 
          source= "1.6" target="1.6" destdir="bin" fork="yes" includeantruntime="false">
            <src path="${src}"/>            
        </javac>
    </target>
    
    <target name="clean">
        <delete dir="${output}"/>
    	<mkdir dir="${output}"/>
    </target>
	
    <target name="compile_unit_tests" >
        <javac executable="${javac1.6}" 
          source="1.6" target="1.6" destdir="bin" fork="yes" includeantruntime="false">
            <src path="${test_src}"/>
            <classpath refid="classpath"/>	
        </javac>
    </target>
	
    <target name="run_unit_tests" depends="compile_unit_tests">
        <junit printsummary="yes" haltonfailure="true"
          failureProperty="test.failed" logfailedtests="yes">
        <!-- Project classpath, must include junit.jar -->
        <classpath refid="classpath"/>
        <!-- test class -->
        <classpath location="${test_classpath}"/>
            <test name="com.brasee.chess.BoardTest"
              haltonfailure="no" todir="${test_output}">
                <formatter type="plain"/>
                <formatter type="xml"/>
            </test>
        </junit>
        <fail message="Junit tests failed. Please see test reports" if="test.failed"/>
    </target>
    
    <target name="run_GUI_tests">
        <exec dir="${gui.dir}" executable="sudo" failonerror="true" 
          errorproperty="test.failed" resultproperty="${return.code}">
            <env key="PATH" path="${env.PATH}:/usr/local/bin:/usr/bin"/>
            <arg value="python"/>
            <arg value="SimplePythonTest.py"/>
        </exec>
        <fail message="GUI tests failed. Please see test reports.">
            <condition>
              <isfailure code="${return.code}"/>
            </condition>
        </fail>
        <exec dir="${gui.dir}" executable="sudo" failonerror="true" 
          errorproperty="test.failed">
            <env key="PATH" path="${env.PATH}:/usr/local/bin:/usr/bin"/>
            <arg value="python"/>
            <arg value="SimplePythonTest.py"/>
        </exec>
        <fail message="GUI tests failed. Please see test reports" if="test.failed"/>
    </target>

</project>
